plugins {
    id 'java'
    id 'war'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.theaiexplained'
version = '0.0.1'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java', 'src/util/java', 'src/proto/java', 'src/sample/java']
        }
    }
}

ext {
    set('springAiVersion', "1.0.0-M6")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-tomcat'
    implementation 'org.springframework.security:spring-security-oauth2-jose'
    implementation 'org.springframework.security:spring-security-oauth2-authorization-server'

    implementation 'org.dom4j:dom4j:2.1.4'
    implementation 'commons-codec:commons-codec:1.16.0'
    implementation 'org.apache.commons:commons-lang3:3.14.0'

    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'software.amazon.awssdk:sqs:2.21.0'
    implementation 'software.amazon.awssdk:dynamodb:2.21.0'
    implementation 'software.amazon.awssdk:dynamodb-enhanced:2.21.0'
    implementation 'software.amazon.awssdk:s3:2.21.0'
    implementation 'software.amazon.awssdk:ses:2.21.0'
    implementation 'software.amazon.awssdk:netty-nio-client:2.21.0'

    implementation 'com.fasterxml.jackson.core:jackson-databind'

    implementation 'jakarta.servlet:jakarta.servlet-api:6.0.0'
    implementation 'jakarta.servlet.jsp:jakarta.servlet.jsp-api:3.0.0'
    implementation 'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api:3.0.0'
    implementation 'org.glassfish.web:jakarta.servlet.jsp.jstl:3.0.1'

    implementation 'javax.servlet:jstl:1.2'

    implementation "com.googlecode.owasp-java-html-sanitizer:owasp-java-html-sanitizer:20220608.1"
    implementation "com.google.zxing:core:3.5.1"
    implementation "com.google.zxing:javase:3.5.1"
    implementation "com.google.code.gson:gson:2.11.0"

    // Apache Batik for SVG processing
    implementation "org.apache.xmlgraphics:batik-transcoder:1.14"
    implementation "org.apache.xmlgraphics:batik-codec:1.14"
    implementation "org.apache.xmlgraphics:batik-bridge:1.14"
    implementation "org.apache.xmlgraphics:batik-dom:1.14"
    implementation "org.apache.xmlgraphics:batik-gvt:1.14"
    implementation "org.apache.xmlgraphics:batik-svg-dom:1.14"
    implementation "org.apache.xmlgraphics:batik-util:1.14"

    implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.ai:spring-ai-bom:${springAiVersion}"
    }
}

tasks.register('makeWar', War) {
    archiveBaseName = "AIExplained_Webapp-CI"
    archiveClassifier = ""
}

tasks.register('makeDocs', Zip) {
    archiveBaseName = "AIExplained_Docs-CI"
    from("src/main/docs/") {
        exclude("eslint.config.js")
        exclude("js")
        exclude("node_modules")
        exclude("package*.json")
        exclude("README.md")
        exclude("rollup.config.js")
        exclude("scripts")
        exclude("static")
        exclude("vite.config.js")
        exclude("yarn.lock")
        into("html")
    }
}

tasks.register('makeUtilJar', Jar) {
    archiveBaseName = "AIExplained_Utils-CI"
    from(tasks.named("jar"))
}

tasks.register('makeUtilDependencies', Zip) {
    archiveBaseName = "AIExplained_Dependencies-CI"
    from(configurations.compileClasspath)
}
tasks.named('test') {
    useJUnitPlatform()
}
